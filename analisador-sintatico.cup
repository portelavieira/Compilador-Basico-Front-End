import java.util.Stack;
import java.util.List;
import java.util.ArrayList;


parser code {:
    Scanner s;
    parser(Scanner s) { this.s = s; }
:}

scan with {: return s.next_token(); :};

// Declaração de terminais
terminal SEMI, PLUS, MINUS, TIMES, DIV, EQ, NEQ, LBRACE, RBRACE, LPAREN, RPAREN;
terminal KW_IF, KW_ELSE, KW_WHILE, KW_RETURN, IDENTIFIER, NUMBER;

// Declaração de não-terminais
non terminal List<String> stmt_list, stmt, expr;
non terminal String type;

// Precedências
precedence left PLUS, MINUS;
precedence left TIMES, DIV;

// Símbolo inicial
start with stmt_list;

stmt_list ::= stmt_list:s stmt:e SEMI
               {: $s.addAll($e); $$ = $s; :}
            | stmt:e SEMI
               {: $$ = new ArrayList<>(); $$.addAll($e); :};

stmt ::= type:typ IDENTIFIER:id
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("Declaração de variável: " + $typ + " " + id.value);
              $$ = temp;
           :}
       | KW_IF LPAREN expr:cond RPAREN stmt:if_stmt KW_ELSE stmt:else_stmt
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("IF/ELSE Statement");
              temp.addAll($cond);
              temp.addAll($if_stmt);
              temp.addAll($else_stmt);
              $$ = temp;
           :}
       | KW_WHILE LPAREN expr:cond RPAREN stmt:body
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("WHILE Loop");
              temp.addAll($cond);
              temp.addAll($body);
              $$ = temp;
           :}
       | LBRACE stmt_list:block RBRACE
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("Bloco");
              temp.addAll($block);
              $$ = temp;
           :};

expr ::= expr:e1 PLUS expr:e2
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("+");
              temp.addAll($e1);
              temp.addAll($e2);
              $$ = temp;
           :}
       | expr:e1 MINUS expr:e2
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("-");
              temp.addAll($e1);
              temp.addAll($e2);
              $$ = temp;
           :}
       | expr:e1 TIMES expr:e2
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("*");
              temp.addAll($e1);
              temp.addAll($e2);
              $$ = temp;
           :}
       | expr:e1 DIV expr:e2
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("/");
              temp.addAll($e1);
              temp.addAll($e2);
              $$ = temp;
           :}
       | LPAREN expr:e RPAREN
           {: $$ = $e; :}
       | NUMBER:n
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("Número: " + n.value);
              $$ = temp;
           :}
       | IDENTIFIER:id
           {: 
              List<String> temp = new ArrayList<>();
              temp.add("Identificador: " + id.value);
              $$ = temp;
           :};

